{"ast":null,"code":"var _jsxFileName = \"C:\\\\test\\\\usdt-eth-price-app\\\\src\\\\components\\\\PriceCalculator.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './styles.css'; // Импорт стилей\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PriceCalculator = () => {\n  _s();\n  const [ethAmount, setEthAmount] = useState(0);\n  const [action, setAction] = useState('buy');\n  const [usdtAmount, setUsdtAmount] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://api.binance.com/api/v3/ticker/price', {\n          params: {\n            symbol: 'ethusdt'\n          }\n        });\n        const ethPrice = parseFloat(response.data.price);\n        const calculatedUsdtAmount = action === 'buy' ? ethAmount * ethPrice : ethAmount / ethPrice;\n        setUsdtAmount(calculatedUsdtAmount);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n    const binanceWebSocket = new WebSocket('wss://stream.binance.com:9443/ws/ethusdt@trade');\n    binanceWebSocket.onmessage = event => {\n      const parsedMessage = JSON.parse(event.data);\n      if (parsedMessage.e === 'trade') {\n        const ethPrice = parseFloat(parsedMessage.p);\n        const updatedUsdtAmount = action.toLowerCase() === 'buy' ? ethAmount * ethPrice : ethAmount / ethPrice;\n        setUsdtAmount(updatedUsdtAmount);\n      }\n    };\n    return () => {\n      binanceWebSocket.close();\n    };\n  }, [ethAmount, action]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"USDT/ETH Price Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"ETH Amount:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: ethAmount,\n        onChange: e => setEthAmount(parseFloat(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Action:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: action,\n        onChange: e => setAction(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"buy\",\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sell\",\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"USDT Amount:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), \" \", usdtAmount !== null ? usdtAmount.toFixed(2) : 'Loading...']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(PriceCalculator, \"60HD7T+dw5bnZWE9Df1q0/qzZr8=\");\n_c = PriceCalculator;\nexport default PriceCalculator;\nvar _c;\n$RefreshReg$(_c, \"PriceCalculator\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PriceCalculator","_s","ethAmount","setEthAmount","action","setAction","usdtAmount","setUsdtAmount","fetchData","response","get","params","symbol","ethPrice","parseFloat","data","price","calculatedUsdtAmount","error","console","binanceWebSocket","WebSocket","onmessage","event","parsedMessage","JSON","parse","e","p","updatedUsdtAmount","toLowerCase","close","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","toFixed","_c","$RefreshReg$"],"sources":["C:/test/usdt-eth-price-app/src/components/PriceCalculator.tsx"],"sourcesContent":["\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './styles.css'; // Импорт стилей\r\nconst PriceCalculator: React.FC = () => {\r\n    const [ethAmount, setEthAmount] = useState<number>(0);\r\n    const [action, setAction] = useState<string>('buy');\r\n    const [usdtAmount, setUsdtAmount] = useState<number | null>(null);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('https://api.binance.com/api/v3/ticker/price', {\r\n                    params: { symbol: 'ethusdt' },\r\n                });\r\n\r\n                const ethPrice = parseFloat(response.data.price);\r\n                const calculatedUsdtAmount = action === 'buy' ? ethAmount * ethPrice : ethAmount / ethPrice;\r\n\r\n                setUsdtAmount(calculatedUsdtAmount);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n\r\n        const binanceWebSocket = new WebSocket(\r\n            'wss://stream.binance.com:9443/ws/ethusdt@trade'\r\n        );\r\n\r\n        binanceWebSocket.onmessage = (event) => {\r\n            const parsedMessage = JSON.parse(event.data);\r\n\r\n            if (parsedMessage.e === 'trade') {\r\n                const ethPrice = parseFloat(parsedMessage.p);\r\n                const updatedUsdtAmount =\r\n                    action.toLowerCase() === 'buy' ? ethAmount * ethPrice : ethAmount / ethPrice;\r\n                setUsdtAmount(updatedUsdtAmount);\r\n            }\r\n        };\r\n\r\n        return () => {\r\n            binanceWebSocket.close();\r\n        };\r\n    }, [ethAmount, action]);\r\n    return (\r\n        <div>\r\n            <h1>USDT/ETH Price Calculator</h1>\r\n            <label>\r\n                ETH Amount:\r\n                <input\r\n                    type=\"number\"\r\n                    value={ethAmount}\r\n                    onChange={(e) => setEthAmount(parseFloat(e.target.value))}\r\n                />\r\n            </label>\r\n            <label>\r\n                Action:\r\n                <select value={action} onChange={(e) => setAction(e.target.value)}>\r\n                    <option value=\"buy\">Buy</option>\r\n                    <option value=\"sell\">Sell</option>\r\n                </select>\r\n            </label>\r\n            <div>\r\n                <strong>USDT Amount:</strong> {usdtAmount !== null ? usdtAmount.toFixed(2) : 'Loading...'}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PriceCalculator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}